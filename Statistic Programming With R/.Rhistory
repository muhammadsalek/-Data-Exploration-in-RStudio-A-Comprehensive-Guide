select(gapminder, country, continent, year)
select(gapminder, country, continent, year)
install.packages('dplyr')
library(dplyr)
install.packages("gapminder")
library(gapminder)
select(gapminder, country, continent, year)
select(gapminder, country, continent, year)
#onecolumn summary
summary(gapminder$lifeExp)
#load dplyr
library(dplyr)
select(gapminder, country)
#load dplyr
library(dplyr)
library(gapminder)
select(gapminder, country)
# Pick multiple columns
select(gapminder, country,continent,year,pop,continent)
select(gapminder, -gdpercap)
#Remove single column
select(gapminder, -gdpPercap)
# Removing multiple columns
select(gapminder, -c(gdpPercap,pop))
select(gapminder,country:year)
#Select column using contains
select(gapminder,contains("c"))
select(gapminder,contains("c"),contains("g"))
#Select column using strts_with
select(gapminder,starts_with("c"))
#Select column using ends_with
select(gapminder,ends_with(("p")))
Chaining Method: The Pipe(%>%) Operator
#Chaining Method: The Pipe(%>%) Operator
gapminder %>%
select(country, continent,year)%>%
head()
#The count verb
gapminder %>%
count()
#The count variable
gapminder %>%
count(country)
#Count and Sort
gapminder %>%
count(country,sort = TRUE)
#Count Population
gapminder %>%
select(country,pop) %>%
count(country,wt=pop,sort = T)
#filter:Equality("=")
filter(gapminder,country=="Bangladesh")
#filter:Inequality("!=")
filter(gapminder,country!="Bangladesh")
#filter:Greater(">")
filter(gapminder,gdpPercap>800)
#filter:greater or equal(">=")
filter(gapminder,gdpPercap>=800)
#filter:less("<")
filter(gapminder,gdpPercap<-800)
#filter:less("<")
filter(gapminder,gdpPercap<800)
#filter:less("<=")
filter(gapminder,gdpPercap <= 800)
#filter:Logical AND("&")
filter(gapminder,country=="Bangladesh" & gdpPercap>800)
filter(gapminder,country=="Bangladesh" | gdpPercap>800)
#filter:The "%in% Operator
filter(gapminder,country%in% c("Bangladesh",'Australia'))
#Create a new column
gapminder%>%
mutate(gdp = gdpPercap * pop) %>%
head()
#GDP in Million
gapminder %>%
mutate(gdp=gdpPercrap * pop/10^6)%>%
head()
## Load the dplyr package
library(dplyr)
# Assuming gapminder is already loaded
gapminder %>%
mutate(gdp = gdpPercrap * pop / 10^6) %>%
head()
## Load the dplyr package
library(dplyr)
library(gapminder)
#GDP in Million
gapminder %>%
mutate(gdp=gdpPercrap * pop/10^6)%>%
head()
View(gapminder)
#GDP in Million
gapminder %>%
mutate(gdp=gdpPercrap * pop/10^6)%>%
head()
colnames(gapminder)
gapminder %>%
mutate(gdp = gdpPercap * pop / 10^6) %>%
head()
#Reorder Rows
gapminder %>%
select(country,pop) %>%
arrange(pop) %>%
head()
## Load the dplyr package
library(dplyr)
library(gapminder)
View(gapminder)
# Assuming gapminder is already loaded
gapminder %>%
mutate(gdp = gdpPercrap * pop / 10^6) %>%
head()
View(gapminder)
# Assuming gapminder is already loaded
gapminder %>%
mutate(gdp = gdpPercrap * pop / 10^6) %>%
head()
library(gapminder)
## Load the dplyr package
library(dplyr)
## Load the dplyr package
library(dplyr)
library(gapminder)
View(gapminder)
# Assuming gapminder is already loaded
gapminder %>%
mutate(gdp = gdpPercrap * pop / 10^6) %>%
head()
## Load the dplyr package
library(dplyr)
library(gapminder)
View(gapminder)
# Assuming gapminder is already loaded
gapminder %>%
mutate(gdp = gdpPercrap * pop / 10^6) %>%
head()
df <- df %>%
mutate(gdp = gdpPerCap * pop / 10^6)
library(dplyr)
library(dplyr)
View(dplyr)
library(gapminder)
View(gapminder)
# Assuming gapminder is already loaded
gapminder %>%
mutate(gdp = gdpPercrap * pop / 10^6) %>%
head()
library(gapminder)
View(gapminder)
head(gapminder)
names(gapminder)
str(gapminder)
#Datastructure
str(gapminder)
#Summary
summary(gapminder)
summary(gapminder$lifeExp)
summary(gapminder$lifeExp)
select(gapminder, country)
#The count verb
gapminder %>%
count()
#Reorder Rows
gapminder %>%
select(country,pop) %>%
arrange(pop) %>%
head()
gapminder %>%
select(country,pop) %>%
arrange(desc(pop)) %>%
head()
#Grouping data
group_by(continent) %>%
head()
select(gapminder, country,year,pop,continent)
Grouping data
#Grouping data
group_by(continent) %>%
head()
#Grouping data
group_by(country) %>%
head()
#Chaining Method: The Pipe(%>%) Operator
gapminder %>%
select(country, continent,year)%>%
head()
#Grouping data
group_by(country) %>%
head()
#Grouping data
group_by(continent) %>%
head()
library(dplyr)
your_dataframe %>% filter(continent == "Asia")
gapminder %>%
select(country, continent,year)%>%
head()
#Grouping data
group_by(continent) %>%
head()
Summarize(total_pop=pop)
summarize(total_pop=pop)
#Examine first few rows
head(gapminder)
#Examine last few rows
tail(gapminder)
# Dimensions
dim(gapminder)
#Colnames
names(gapminder)
#Datastructure
str(gapminder)
#Summary
summary(gapminder)
#onecolumn summary
summary(gapminder$lifeExp)
#Select column using range
select(gapminder,country:year)
#Select column using contains
select(gapminder,contains("c"))
#Select column using multiple columns
select(gapminder,contains("c"),contains("g"))
#Select column using strts_with
select(gapminder,starts_with("c"))
#Select column using ends_with
select(gapminder,ends_with(("p")))
gapminder %>%
select(country, continent,year)%>%
head()
#The count verb
gapminder %>%
count()
#The count variable
gapminder %>%
count(country)
#Count and Sort
gapminder %>%
count(country,sort = TRUE)
#Count Population
gapminder %>%
select(country,pop) %>%
count(country,wt=pop,sort = T)
#Relational Operator
#filter:Equality("=")
filter(gapminder,country=="Bangladesh")
#filter:Inequality("!=")
filter(gapminder,country!="Bangladesh")
#filter:Greater(">")
filter(gapminder,gdpPercap>800)
#filter:greater or equal(">=")
filter(gapminder,gdpPercap>=800)
#filter:less("<")
filter(gapminder,gdpPercap<800)
#filter:less("<=")
filter(gapminder,gdpPercap <= 800)
#filter:Logical AND("&")
filter(gapminder,country=="Bangladesh" & gdpPercap>800)
filter(gapminder,country=="Bangladesh" | gdpPercap>800)
#filter:The "%in% Operator
filter(gapminder,country %in% c("Bangladesh",'Australia'))
#Create a new column
gapminder%>%
mutate(gdp = gdpPercap * pop) %>%
head()
## Load the dplyr package
library(dplyr)
library(gapminder)
View(gapminder)
# Assuming gapminder is already loaded
gapminder %>%
mutate(gdp = gdpPercrap * pop / 10^6) %>%
head()
#Descending order
gapminder %>%
select(country,pop) %>%
arrange(desc(pop)) %>%
head()
#Grouping data
group_by(continent) %>%
head()
#Grouping data
gapminder %>%
group_by(continent) %>%
head()
#summarize
gapminder
summarize(total_pop=pop)
#summarize
gapminder %>%
summarize(total_pop=pop)
#summarize
gapminder %>%
summarize(total_pop= sum(pop))
#Aggregate and summarize
gapminder %>%
summarize(total_population = sum(pop),
avg_gdppercap = mean(gdpPercap))
gapminder %>%
group_by(continent) %>%
summarise(max_lifeexp = max(lifeExp))
# The top_n Verb
gapminder%>%
group_by(continent) %>%
top_n(1,pop)
#REnaming Column
rename(population = pop) %>%
head()
# The top_n Verb
gapminder%>%
group_by(continent) %>%
top_n(1,pop)
#REnaming Column
gapminder
rename(population = pop) %>%
head()
gapminder %>%
rename(population = pop) %>%
head()
gapminder%>%
rename(population = pop) %>%
head()
#Data structure
glimpse(gapminder)
# The easiest way to get dplyr is to install the whole tidyverse:
install.packages("tidyverse")
#create a data set
gapminder %>%
filter(country ="Bangladesh")
#create a data set
gapminder %>%
filter(country =="Bangladesh")
load(gapminder)
library(gapminder)
library(gapminder)
View(gapminder)
gapminder %>%
filter(country =="Bangladesh")
gapminder %>%
filter(country =='Bangladesh')
#REnaming Column
gapminder%>%
rename(population = pop) %>%
head()
## Load the dplyr package
library(dplyr)
library(gapminder)
View(gapminder)
#create a data set
library(gapminder)
View(gapminder)
gapminder %>%
filter(country =='Bangladesh')
gapminder %>%
filter(country =='Bangladesh')
bd_df <- gpminder %>%
filter(country == 'Bangladesh')
bd_df <- gapminder %>%
filter(country == 'Bangladesh')
df_2007 <-gapminder %>%
filter(year == 2007)
df_2007 <-gapminder %>%
filter(year == 2007)
df_2010 <- gapminder %>%
filter(year==2008)
df_2008 <- gapminder %>%
filter(year==2008)
load("~/.RData")
df <-read.csv("C:\\Users\\Acer\\OneDrive\\Desktop\\GW Sample ( SURMA KHUSIYARA FLOOD PLAIN AREA).xlsx")
df
df<-read.csv("C:\\Users\\Acer\\Downloads\\Copy of conference_(1)(1).csv")
df
df %>%
filter( Parameter = "pH")
# Reading own Data
df<-read.csv("C:\\Users\\Acer\\Downloads\\Copy of conference_(1)(1).csv")
df
data()
BOD
library(readr)
Copy_of_salekh_WQI_1_ <- read_csv("Copy of salekh WQI(1).csv")
View(Copy_of_salekh_WQI_1_)
setwd("~/")
setwd("~/")
setwd("~/")
setwd("~/")
setwd("~/")
data("salekh WQI.xlsx")
data
sust<read.csv("C:\\Users\\Acer\\OneDrive\\Desktop\\Copy of Anamul_(1)(1).csv")
data3<read.csv("C:\\Users\\Acer\\OneDrive\\Desktop\\Copy of Anamul_(1)(1).csv")
setwd("C:/Users/Acer/OneDrive/Desktop/Statistic Programming With R")
install.packages("ggplot2")
library(ggplot2)
Data9 <- read.csv("C:\\Users\\Acer\\OneDrive\\Desktop\\Statistic Programming With R\\Salek.csv")
Data9
View(Data9)
Data9_df <- as.data.frame(Data9)
Data9
colnames(Data9_df)
str(Data9)
Data9_df |>
ggplot(aes(x= Location, y = Parameter, colour = Pre.monsoon)) +
geom_line()
Data9_df |>
ggplot(aes(x= Location, y = Parameter, colour = Pre.monsoon)) +
geom_boxplot()
Data9_df |>
ggplot(aes(x= Location, y = Parameter, colour = Pre.monsoon)) +
geom_point()
Data9_df |>
ggplot(aes(x= Location, y = Parameter, colour = Pre.monsoon)) +
geom_bar()
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
setwd("C:/Users/Acer/OneDrive/Desktop/Statistic Programming With R")
book <- read.csv("C:\\Users\\Acer\\OneDrive\\Desktop\\Statistic Programming With R\\Rahim.csv")
book
colnames(book)
str(book)
book_df <- as.data.frame(book)
book
View(book_df)
book_df |>
ggplot(aes(x= Location, y = Parameter, fill =  Pre.monsoon, Monsoon, Post.monsoon)) +
geom_line()
book_df |>
ggplot(aes(x= Location, y = Parameter, fill =  Pre.monsoon, Monsoon, Post.monsoon)) +
geom_boxplot()
book_df |>
ggplot(aes(x= Location, y = Parameter, fill =  Pre.monsoon, Monsoon, Post.monsoon)) +
geom_point()
book_df |>
ggplot(aes(x= Location, y = Parameter, fill =  Pre.monsoon, Monsoon, Post.monsoon)) +
geom_bar()
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
setwd("C:/Users/Acer/OneDrive/Desktop/Statistic Programming With R")
Data9 <- read.csv("C:\\Users\\Acer\\OneDrive\\Desktop\\Statistic Programming With R\\Salek.csv")
Data9
View(Data9)
Data9_df <- as.data.frame(Data9)
Data9
colnames(Data9_df)
str(Data9)
#line chart
Data9_df |>
ggplot(aes(x= Location, y = Parameter, colour = Pre.monsoon)) +
geom_bar()
Data9_df |>
ggplot(aes(x = Location, y = Parameter, colour = Pre.monsoon)) +
geom_line() +
geom_point()
library(dplyr)
ibrary(gapminder)
View(gapminder)
head(gapminder)
library(gapminder)
head(gapminder)
tail(gapminder)
dim(gapminder)
names(gapminder)
str(gapminder)
summary(gapminder)
summary(gapminder$lifeExp)
library(dplyr)
select(gapminder, country)
select(gapminder, country,year,pop,continent)
select(gapminder, -gdpPercap)
select(gapminder, -c(gdpPercap,pop))
gapminder %>%
select(country, continent,year)%>%
head()
gapminder %>%
count()
gapminder %>%
count(country)
gapminder %>%
count(country,sort = TRUE)
gapminder %>%
select(country,pop) %>%
count(country,wt=pop,sort = T)
filter(gapminder,country=="Bangladesh")
filter(gapminder,country!="Bangladesh")
filter(gapminder,gdpPercap>800)
gapminder %>%
group_by(continent) %>%
head()
gapminder %>%
group_by(continent) %>%
head()
gapminder %>%
summarize(total_pop= sum(pop))
gapminder%>%
group_by(continent) %>%
top_n(1,pop)
glimpse(gapminder)
data(cars)
View(cars)
head(cars)
hist(cars$speed)
hist()
gender<- c("M","M","M","F")
gender <- factor(gender)
str(gender)
gender <- factor(gender,
levels = c("M","F"),
labels = c ("Male","Female"))
View(gender)
df1 <- data.frame(fst_name,gender,gpa,pass)
